name: APT DEB Package Downloader (For Offline Use)

on:
  workflow_dispatch:
    inputs:
      packages:
        type: string
        description: 'Space-separated list of packages to download (e.g., curl gnupg2 ca-certificates lsb-release)'
        required: true

jobs:
  download_debs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment and cleanup old debs
        run: |
          sudo apt clean
          rm -rf ~/debs ~/debs.tar.gz /tmp/debs.list || true
          mkdir -p ~/debs

      - name: Install apt-rdepends
        run: |
          sudo apt update
          sudo apt install -y apt-rdepends

      - name: Build dependency tree
        run: |
          PACKAGES="${{ github.event.inputs.packages }}"
          echo "Building dependency tree for: $PACKAGES"
          
          # 获取完整的依赖列表（包括推荐）
          apt-rdepends --state-follow=Installed --state-show=NotInstalled $PACKAGES | grep -v "^Reverse" > /tmp/debs.list

      - name: Download all missing packages
        run: |
          echo "Downloading .deb files..."
          while read pkg; do
            apt-get install --download-only -y "$pkg"
          done < /tmp/debs.list

      - name: Find APT cache directory and copy .deb files
        id: find_cache_and_copy
        run: |
          APT_CACHE_DIR=$(apt-config shell Dir::Cache/apt Dir)
          APT_CACHE_DIR=${APT_CACHE_DIR#*=}
          if [ -z "$APT_CACHE_DIR" ]; then
            APT_CACHE_DIR="/var/cache/apt/archives"
          fi

          if ls "$APT_CACHE_DIR"/*.deb 1>/dev/null 2>&1; then
            cp "$APT_CACHE_DIR"/*.deb ~/debs/
            count=$(ls ~/debs/*.deb | wc -l)
            echo "Found $count .deb files"
            echo "count=$count" >> $GITHUB_OUTPUT
          else
            echo "count=0" >> $GITHUB_OUTPUT
          fi

      - name: Archive .deb files
        if: fromJSON(steps.find_cache_and_copy.outputs.count) > 0
        run: |
          cd ~/ && tar czf debs.tar.gz debs/

      - name: Upload Artifact
        if: fromJSON(steps.find_cache_and_copy.outputs.count) > 0
        uses: actions/upload-artifact@v4
        with:
          name: deb-packages
          path: ~/debs.tar.gz
