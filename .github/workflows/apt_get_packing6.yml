name: Offline Package Download and DNS Setup

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: '软件包名称（可用于安装bind9和dnsutils等）'
        required: true
        type: string

jobs:
  download-packages:
    runs-on: ubuntu-22.04

    steps:
      - name: 创建保存目录并设置权限
        run: |
          sudo mkdir -p /tmp/packages
          sudo chmod 777 /tmp/packages

      - name: 清理 apt 缓存
        run: sudo apt-get clean

      - name: 更新 apt 源
        run: sudo apt-get update -y

      - name: 修复软件包依赖
        run: sudo apt-get install -f

      - name: 重置 dpkg 数据库
        run: sudo dpkg --configure -a

      - name: 下载指定软件包及其依赖（处理 debconf-2.0 错误）
        run: |
          # 尝试正常下载软件包及其依赖
          sudo apt-get -d install ${{ github.event.inputs.package_name }}
          sudo apt download $(apt-rdepends ${{ github.event.inputs.package_name }} | grep -v "^ ") || true
          # 若出现 debconf-2.0 错误，使用修正命令
          sudo apt download $(apt-rdepends ${{ github.event.inputs.package_name }} | grep -v "^ " | sed 's/debconf-2.0/debconf/g') || true
          # 若仍有问题，使用备用下载命令
          for i in $(sudo apt-cache depends ${{ github.event.inputs.package_name }}| grep -E 'Depends|Recommends|Suggests' | cut -d ':' -f 2,3 | sed -e s/'<'/''/ -e s/'>'/''/); do sudo apt-get download $i 2>>errors.txt; done || true

      - name: 移动下载的软件包
        run: sudo mv /var/cache/apt/archives/*.deb /tmp/packages

      - name: 打包下载的软件包
        run: |
          cd /tmp
          sudo tar -czvf packages.tar.gz packages

      - name: 上传打包文件
        uses: actions/upload-artifact@v4
        with:
          name: offline-packages
          path: /tmp/packages.tar.gz

      - name: 安装下载的软件包（假设已将软件包传输到目标无网络环境）
        run: |
          # 模拟进入目标无网络环境的操作（实际需手动传输软件包）
          cd /tmp/packages
          sudo dpkg -i *.deb || true
          # 处理可能的依赖问题
          sudo apt-get install -f || true    
