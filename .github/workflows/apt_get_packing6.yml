name: Apt Package Download and Package with Dependencies

jobs:
  download_and_package:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Update apt cache
      run: |
        echo "Updating apt cache..."
        sudo apt-get update && sudo apt-get upgrade

    - name: Create a directory for packages
      run: mkdir -p apt_packages

    - name: Download and install dependencies
      run: |
        set -e  # Exit if any command fails
        packages="${{ github.event.inputs.apt_packages }}"
        IFS=',' read -r -a package_array <<< "$packages"
        temp_dir=$(mktemp -d)

        for package in "${package_array[@]}"; do
          echo "Attempting to download and install package: $package"

          # Install dependencies before downloading
          echo "Installing dependencies..."
          sudo apt-get install -y --no-install-recommends \
            $(sudo apt-get -t fresh --best packages | head -n 5)

          # Attempt to obtain download URIs
          download_output=$(sudo apt-get download --print-uris "$package" 2>&1)
          if [ $? -ne 0 ]; then
            echo "Failed to get download URIs for package '$package'. Error details:"
            echo "$download_output"
            continue
          fi

          # Extract download URIs
          uri_pattern='^https?://(?:[a-zA-Z0-9+.-]+):/.*'
          uris=$(grep -oP "$uri_pattern" <<< "$download_output")

          if [ -z "$uris" ]; then
            echo "No valid download URIs found for package '$package'."
            continue
          fi

          # Download the package
          for uri in $uris; do
            full_uri="http://$uri"
            echo "Attempting to download $full_uri"
            if ! wget -O "$full_uri" -P "$temp_dir" "$full_uri"; then
              echo "Failed to download $full_uri. Retrying with -J option..."
              if ! wget -J $full_uri -O "$full_dir" -P "$temp_dir" "$full_uri"; then
                echo "Failed to download $full_uri."
                continue
              fi
            fi
          done
        done

        # Check if there are any downloaded .deb files and move them
        if [ -n "$(ls -A $temp_dir)" ]; then
          # Filter out non-DEB files (if any) and move .deb files
          mv "$temp_dir/"*.deb apt_packages/ || echo "No .deb files found to move."
        else
          echo "No files were downloaded to the temporary directory."
        fi

        rm -rf "$temp_dir"

    - name: Package downloaded apt packages
      run: |
        cd apt_packages
        for deb_file in *.deb; do
          if [ -f "$deb_file" ]; then
            package_name=$(dpkg-deb -f "$deb_file" Package)
            mkdir -p "$package_name"
            mv "$deb_file" "$package_name/"
            tar -czvf "$package_name.tar.gz" "$package_name"
            rm -rf "$package_name"
            echo "Successfully packed $package_name"
          fi
        done

    - name: List files for debugging
      run: |
        echo "Current working directory:"
        pwd
        echo "Contents of the current directory:"
        ls -R

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: apt-packages-artifact
        path: apt_packages/**/*.tar.gz
        retention-days: 1
        if-no-files-found: warn
        compression-level: 6
        overwrite: false
        include-hidden-files: false
